{"version":3,"sources":["AppTopbar.js","AppMenu.js","AppProfile.js","store/actions/teacher.js","store/actions/actionTypes.js","store/uris.js","store/actions/auth.js","pages/teacher/TeacherMain.js","pages/teacher/ViewTable.js","pages/teacher/EditTable.js","pages/teacher/BarChart.js","pages/teacher/InboxArea.js","pages/teacher/PostArea.js","pages/teacher/Timeline.js","pages/teacher/Teacher.js","store/actions/student.js","pages/student/StudentMain.js","pages/student/ViewTable.js","pages/student/InboxArea.js","pages/student/PostArea.js","pages/student/Timeline.js","pages/student/Student.js","store/actions/admin.js","pages/admin/AdminMain.js","pages/admin/TeacherSessions.js","pages/admin/AdminDashboard.js","pages/admin/Admin.js","Login/Login.js","pages/LogOut.js","App.js","ScrollToTop.js","store/reducers/auth.js","store/reducers/teacher.js","store/reducers/student.js","store/reducers/admin.js","index.js","images/Profile-6.jpg","images/tulogo.png","images/pcampus.jpg"],"names":["AppTopbar","className","onClick","this","props","onToggleMenu","Component","defaultProps","AppSubmenu","state","activeIndex","event","item","index","disabled","preventDefault","command","originalEvent","setState","onMenuItemClick","submenuIcon","items","badge","Fragment","icon","label","i","content","renderLinkContent","to","activeClassName","e","exact","target","href","url","map","active","styleClass","classNames","badgeStyleClass","key","root","renderLink","AppMenu","model","AppProfile","displayBasic","displayBasic2","displayModal","displayConfirmation","displayMaximizable","displayPosition","displayPosition2","visibleRight","position","expanded","bind","onHide","name","autoFocus","src","profile1","width","alt","username","header","visible","style","footer","renderFooter","connect","auth","fullname","setInfoBox","values","type","value","baseURI","FETCH_CLASS_LIST","FETCH_POSTS","authFail","error","logout","localStorage","removeItem","setAuthRedirect","MainDashTeacher","infoBox","toast","show","severity","summary","detail","setInfoBoxNULL","data","selectCard","lecture_id","setSectionSubject","section_code","subject_code","theory_fm","practical_fm","setRedirect","zIndex","ref","el","loading","paddingTop","classes","title","subTitle","onCardSelectHandler","margin","slice","lineHeight","redirect","React","teacher","dispatch","Class","actions","DataTableView","exportCSV","activeClass","setRedirectNULL","classStudentValues","length","classId","setActiveStudentIndex","fetch","method","headers","then","res","json","setClassStudentValues","catch","err","console","log","dt","recordDatas","classIndex","color","sectionSubject","field","sortable","activeClassStudentValuesIndex","activeSectionSubject","DataTableEdit","onMarksSubmitHandler","stateItem","updatedProducts","update","isInt","parseInt","rowIndex","rowData","onChange","onEditorValueChange","inputTextEditor","updateValues","body","JSON","stringify","status","padding","display","justifyContent","editMode","editor","AssessmentEditor","PracticalEditor","BarChart","assessmentData","practicalData","max","count","assessment","practical","aval","theory_marks","pval","practical_marks","hasOwnProperty","labels","Object","keys","datasets","backgroundColor","Math","legend","fontColor","scales","xAxes","ticks","yAxes","min","options","getOption","Inbox","uris","dat","height","message","Post","value2","onPostSend","section_id","activeSection","person_id","rows","cols","autoResize","full_name","Timeline","Teacher","onSetClass","path","component","token","MainDashStudent","sems","student","sem","onRequestRecheck","actionBodyTemplate","activeSem","semSubjectValues","setActiveSemIndex","toString","setSemSubjectValues","subject_id","semIndex","activeSemSubjectValuesIndex","subject","Student","resetStudentState","setSems","setActiveTeacherUsername","setTeachers","AdminMain","emptyTeacher","email","phone_no","program_code","teacherDialog","department","deleteTeacherDialog","deleteTeachersDialog","selectedTeachers","submitted","globalFilter","leftToolbarTemplate","rightToolbarTemplate","openNew","hideDialog","saveTeacher","editTeacher","confirmDeleteTeacher","deleteTeacher","confirmDeleteSelected","onInputChange","onProgramChange","hideDeleteTeacherDialog","hideDeleteTeachersDialog","toastMsg","dept_name","temp","dept_id","life","id","teachers","chars","charAt","floor","random","val","onFileLoaded","fileInfo","teacherClickHandler","onInput","placeholder","teacherDialogFooter","deleteTeacherDialogFooter","marginTop","left","right","dataKey","paginator","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","modal","htmlFor","required","optionLabel","fontSize","admin","TeacherSessions","emptyLecture","batch","group_code","semester","lectureDialog","lectureSel","batch_is","program_id","lecture","batchs","programs","subjects","sections","semesters","addClass","onBatchChange","onSubjectChange","onGroupChange","onSemChange","onDeleteLecture","activeTeacher","teacherClassValues","setActiveTeacherIndex","setActiveTeacherClasses","resetTeacherClasses","batch_id","teacherIndex","delIndex","onApprove","lectureDialogFooter","activeTeacherUsername","activeTeacherClasses","activeTeacherClassValuesIndex","AdminDashboard","selectedSem","uniqueRoll","onSemesterChange","onFetchStudentSemMarks","Admin","onSetTeachers","Login","onSubmitHandler","document","getElementById","password","onSignIn","setError","tulogo","isAuthenticated","authRedirectPath","authData","setItem","user","role","authSuccess","LogOut","resetStudent","resetTeacher","resetAdmin","onLogOut","resetTeacherState","App","layoutMode","layoutColorMode","staticMenuInactive","overlayMenuActive","mobileMenuActive","PrimeReact","ripple","onWrapperClick","onSidebarClick","menuClick","isDesktop","menu","window","location","element","classList","add","remove","replace","RegExp","split","join","innerWidth","removeClass","createMenu","wrapperClass","sidebarClassName","renderComponent","sidebar","pcampus","ScrollToTop","prevProps","scrollTo","children","withRouter","initialState","authStart","action","authLogout","reducer","setTeacherClasses","setTeacherInfoBox","setActiveClass","setActiveClassStudentIndex","updateClassStudentValues","tempClass","teacherDepartments","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","teacherReducer","studentReducer","adminReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.282567bf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n// import { Dialog } from 'primereact/dialog';\r\n// import { Button } from 'primereact/button';\r\n// import Panel from 'primereact/panel';\r\n// import pcampuslogo from \"./images/pcampus.jpg\";\r\nimport \"./AppTopbar.css\";\r\n\r\nexport class AppTopbar extends Component {\r\n  static defaultProps = {\r\n    onToggleMenu: null\r\n  };\r\n\r\n  static propTypes = {\r\n    onToggleMenu: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-topbar clearfix\">\r\n        <button\r\n          className=\"p-link layout-menu-button\"\r\n          onClick={this.props.onToggleMenu}\r\n        >\r\n          <span className=\"menubar\" />\r\n        </button>\r\n        <div className=\"pcampus\">\r\n\r\n        </div>\r\n        <div className=\"layout-heading\">\r\n          <p>\r\n            Internal Marks Management System\r\n            </p>\r\n        </div>\r\n        {/* <div className=\"layout-topbar-icons\">\r\n         \r\n          <button className=\"p-link\"  >\r\n            \r\n            <span className=\"layout-topbar-item-text\">Inbox</span>\r\n            <span className=\"layout-topbar-icon pi pi-fw pi-inbox\" />\r\n            <span className=\"p-badge p-badge-danger\">5</span>\r\n          </button>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nclass AppSubmenu extends Component {\r\n  static defaultProps = {\r\n    className: null,\r\n    items: null,\r\n    onMenuItemClick: null,\r\n    root: false\r\n  };\r\n\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    items: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func,\r\n    root: PropTypes.bool\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: null };\r\n  }\r\n\r\n  onMenuItemClick(event, item, index) {\r\n    //avoid processing disabled items\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    //execute command\r\n    if (item.command) {\r\n      item.command({ originalEvent: event, item: item });\r\n    }\r\n\r\n    if (index === this.state.activeIndex) this.setState({ activeIndex: null });\r\n    else this.setState({ activeIndex: index });\r\n\r\n    if (this.props.onMenuItemClick) {\r\n      this.props.onMenuItemClick({\r\n        originalEvent: event,\r\n        item: item\r\n      });\r\n    }\r\n  }\r\n\r\n  renderLinkContent(item) {\r\n    let submenuIcon = item.items && (\r\n      <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\r\n    );\r\n    let badge = item.badge && (\r\n      <span className=\"menuitem-badge\">{item.badge}</span>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <i className={item.icon}></i>\r\n        <span>{item.label}</span>\r\n        {submenuIcon}\r\n        {badge}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderLink(item, i) {\r\n    let content = this.renderLinkContent(item);\r\n\r\n    if (item.to) {\r\n      return (\r\n        <NavLink\r\n          activeClassName=\"active-route\"\r\n          to={item.to}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          exact\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </NavLink>\r\n      );\r\n    } else {\r\n      return (\r\n        <a\r\n          href={item.url}\r\n          onClick={(e) => this.onMenuItemClick(e, item, i)}\r\n          target={item.target}\r\n        >\r\n          {content}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let items =\r\n      this.props.items &&\r\n      this.props.items.map((item, i) => {\r\n        let active = this.state.activeIndex === i;\r\n        let styleClass = classNames(item.badgeStyleClass, {\r\n          \"active-menuitem\": active && !item.to\r\n        });\r\n\r\n        return (\r\n          <li className={styleClass} key={i}>\r\n            {item.items && this.props.root === true && (\r\n              <div className=\"arrow\"></div>\r\n            )}\r\n            {this.renderLink(item, i)}\r\n            <AppSubmenu\r\n              items={item.items}\r\n              onMenuItemClick={this.props.onMenuItemClick}\r\n            />\r\n          </li>\r\n        );\r\n      });\r\n\r\n    return items ? <ul className={this.props.className}>{items}</ul> : null;\r\n  }\r\n}\r\n\r\nexport class AppMenu extends Component {\r\n  static defaultProps = {\r\n    model: null,\r\n    onMenuItemClick: null\r\n  };\r\n\r\n  static propTypes = {\r\n    model: PropTypes.array,\r\n    onMenuItemClick: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-menu-container\">\r\n        <AppSubmenu\r\n          items={this.props.model}\r\n          className=\"layout-menu\"\r\n          onMenuItemClick={this.props.onMenuItemClick}\r\n          root={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport classNames from \"classnames\";\r\nimport profile1 from \"./../src/images/Profile-6.jpg\";\r\nimport { Button} from \"primereact/button\";\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\n\r\n\r\nclass AppProfile extends Component {\r\n   constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayBasic: false,\r\n            displayBasic2: false,\r\n            displayModal: false,\r\n            displayConfirmation: false,\r\n            displayMaximizable: false,\r\n            displayPosition: false,\r\n            displayPosition2: false,\r\n            visibleRight: false,\r\n            position: \"top-left\",\r\n            expanded: true\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n    }\r\n\r\n onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true\r\n        };\r\n\r\n        if (position) {\r\n            state = {\r\n                ...state,\r\n                position\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    renderFooter(name) {\r\n        return (\r\n            <div>\r\n                <Button label=\"Close\" icon=\"pi pi-check\" onClick={() => this.onHide(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"layout-profile\">\r\n        <div>\r\n          <img\r\n            src={profile1}\r\n            width=\"100px\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <button className=\"p-link layout-profile-link\" onClick={this.onClick}>\r\n          <span className=\"username\">{this.props.username}</span>\r\n        </button>\r\n        <ul\r\n          className={classNames({\r\n            \"layout-profile-expanded\": this.state.expanded\r\n          })}\r\n        >\r\n          <li>\r\n            <button className=\"p-link\" onClick={() => this.onClick('displayPosition', 'left')} >\r\n              <i className=\"pi pi-fw pi-user\" />\r\n              <span>Account</span>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n         <Dialog className=\"accounttextleft\" header=\"Account Details\" visible={this.state.displayPosition} position={this.state.position} style={{ width: '50vw' }} footer={this.renderFooter('displayPosition')} onHide={() => this.onHide('displayPosition')}>\r\n             \r\n      \r\n              <div className=\"p-grid p-dir-col\">\r\n                <img src=\"https://i.imgur.com/IqICwKK.jpg\" alt=\"\"/>\r\n                  <div className=\"p-col  p-dir-rev \">\r\n                  Full Name: Anjil Bishowkarma\r\n                    </div>\r\n                \r\n                  <div className=\"p-col\">\r\n                    Roll No: 074BCT505\r\n                  </div>\r\n                  \r\n                </div>\r\n    \r\n          </Dialog>\r\n          </div>\r\n         \r\n          \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      username: state.auth.fullname,\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )(AppProfile);\r\n","import * as actionTypes from './actionTypes';\r\n// import * as uris from '../uris';\r\n\r\nexport const setClasses = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASSES,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const resetTeacherState = () => {\r\n    return {\r\n        type: actionTypes.RESET_TEACHER_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveClass = (Class) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS,\r\n        Class: Class\r\n    }\r\n};\r\n\r\nexport const setActiveStudentIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setActiveSectionSubject = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const updateClassStudentValues = (value) => {\r\n    return {\r\n        type: actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES,\r\n        value: value\r\n    }\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\n\r\nexport const SET_TEACHER_ACTIVE_CLASS = 'SET_TEACHER_ACTIVE_CLASS';\r\nexport const SET_TEACHER_CLASSES = 'SET_TEACHER_CLASSES';\r\nexport const SET_TEACHER_INFOBOX = 'SET_TEACHER_INFOBOX';\r\nexport const SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX = 'SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX';\r\nexport const SET_TEACHER_CLASS_STUDENT_VALUES = 'SET_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const SET_TEACHER_ACTIVE_SECTION_SUBJECT = 'SET_TEACHER_ACTIVE_SECTION_SUBJECT';\r\nexport const UPDATE_TEACHER_CLASS_STUDENT_VALUES = 'UPDATE_TEACHER_CLASS_STUDENT_VALUES';\r\nexport const RESET_TEACHER_DEFAULTS = 'RESET_TEACHER_DEFAULTS';\r\n\r\nexport const SET_ADMIN_ACTIVE_TEACHER_USERNAME = 'SET_ADMIN_ACTIVE_TEACHER_USERNAME';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASSES = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES';\r\nexport const SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX';\r\nexport const SET_ADMIN_TEACHER_DEPARTMENTS = 'SET_ADMIN_TEACHER_DEPARTMENTS';\r\nexport const SET_ADMIN_TEACHER_CLASS_VALUES = 'SET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const SET_ADMIN_INFOBOX = 'SET_ADMIN_INFOBOX';\r\nexport const SET_ADMIN_TEACHERS = 'SET_ADMIN_TEACHERS';\r\nexport const RESET_ADMIN_TEACHER_CLASS_VALUES = 'RESET_ADMIN_TEACHER_CLASS_VALUES';\r\nexport const RESET_ADMIN_DEFAULTS = 'RESET_ADMIN_DEFAULTS';\r\n// export const SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST = 'SET_ADMIN_TEACHER_CLASSES_STUDENT_LIST';\r\n// export const SET_ADMIN_ACTIVE_TEACHER = 'SET_ADMIN_ACTIVE_TEACHER';\r\n// export const SET_ADMIN_ACTIVE_CLASS = 'SET_ADMIN_ACTIVE_CLASS';\r\n// export const SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES_INDEX';\r\n// export const SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX = 'SET_ADMIN_ACTIVE_TEACHER_CLASSES_STUDENT_LIST_INDEX';\r\n\r\nexport const SET_STUDENT_ACTIVE_SEM='SET_STUDENT_ACTIVE_SEM';\r\nexport const SET_STUDENT_SEM_SUBJECT_VALUES='SET_STUDENT_SEM_SUBJECT_VALUES';\r\nexport const SET_STUDENT_SEMS='SET_STUDENT_SEMS';\r\nexport const SET_STUDENT_INFOBOX = 'SET_STUDENT_INFOBOX';\r\nexport const RESET_STUDENT_DEFAULTS = 'RESET_STUDENT_DEFAULTS';\r\nexport const SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX = 'SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX';\r\n","// const baseURI = 'https://immsnode.herokuapp.com';\r\n// const baseURI2 = 'http://70877ff89f8d.ngrok.io';\r\nconst baseURI = 'http://6e5c198c7d44.ngrok.io';\r\nexport const LOGIN = baseURI+'/api/user/login';\r\n// export const ASSIGN_TEACHER = baseURI+'/api/users/assignTeacher';\r\nexport const ADD_TEACHER = baseURI+\"/api/user/teacher/\";\r\nexport const FETCH_BATCH_LIST = baseURI+'/api/batch/';\r\nexport const FETCH_PROGRAM_LIST = baseURI+'/api/program/';\r\nexport const FETCH_SECTION_LIST = baseURI+'/api/class/section';\r\nexport const FETCH_SUBJECT_LIST = baseURI+'/api/program/subject';\r\nexport const FETCH_CLASS_LIST = baseURI+'/api/class/lecture/';\r\nexport const FETCH_TEACHER_LIST = baseURI+'/api/user/teacher/';\r\nexport const FETCH_CLASS_STUDENT_LIST = baseURI+'/api/marks/lecture/';\r\nexport const FETCH_DEPARTMENT_LIST = baseURI+'/api/dept/';\r\n// export const POST_MARKS = baseURI+'/api/record/class/';\r\nexport const FETCH_STUDENT_SEM_MARKS = baseURI+'/api/marks/student/';\r\nexport const FETCH_STUDENT_DETAILS = baseURI+'/api/user/student/';\r\nexport const REQUEST_STUDENT_MARKS_RECHECK = baseURI+'/api/notification/report/';\r\nexport const FETCH_NOTIFICATIONS = baseURI+'/api/notification/';\r\nexport const FETCH_POSTS = baseURI+'/api/post/';\r\nexport const SUBMIT_POST = baseURI+'/api/post/';\r\n// export const STUDENT_MARKS = baseURI+'/api/marks/';\r\n// export const FETCH_TEACHER_LIST = baseURI+'/api/users?role=teacher';\r\n","// import axios from 'axios';\r\n// import request from 'request-promise';\r\nimport * as actionTypes from './actionTypes';\r\nimport * as uris from '../uris';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, username, role, fullname, email) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username,\r\n        role: role,\r\n        fullname: fullname,\r\n        email: email\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('role');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n        // dispatch(authSuccess(\"test\", \"test\", \"teacher\"));\r\n        fetch(uris.LOGIN, {\r\n            method: 'POST',\r\n            // credentials : 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(authData)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.status === 'success'){\r\n                    // const expirationDate = new Date().getTime() + res.expires * 1000;\r\n                    localStorage.setItem('token', res.token);\r\n                    // localStorage.setItem('expirationDate', expirationDate);\r\n                    localStorage.setItem('id', res.data.user.username);\r\n                    localStorage.setItem('role', ['admin','teacher','student'][res.data.user.role]);\r\n                    dispatch(authSuccess(res.token, res.data.user.person_id, ['admin','teacher','student'][res.data.user.role], res.data.user.full_name, res.data.user.email));\r\n                    // dispatch(checkAuthTimeout(res.expires));\r\n                    // dispatch(setAuthRedirect()); // TODO: check and set path\r\n                } else {\r\n                    // this.toast.show({severity: 'info', summary: 'Login Failed!!', detail: 'Username or Password Incorrect!!!!'})\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err));\r\n        });\r\n        /* axios.post(uris.LOGIN, authData, {withCredentials: true})\r\n            .then(res => {\r\n                localStorage.setItem('token', res.data.token);\r\n                localStorage.setItem('id', res.data.data.user.username);\r\n                localStorage.setItem('role', ['admin','teacher','student'][res.data.data.user.role]);\r\n                dispatch(authSuccess(res.data.token, res.data.data.user.username, ['admin','teacher','student'][res.data.data.user.role]));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.res.data.data.error));\r\n            }); */\r\n            /* const options={\r\n                method:'POST',\r\n                uri:uris.LOGIN,\r\n                body:authData,\r\n                json:true\r\n            };\r\n            // console.log(\"requesting\");\r\n            request(options).then((body)=>{\r\n                console.log(body);\r\n                const expirationDate = new Date(new Date().getTime() + body.expires * 1000);\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('username', authData.username);\r\n                localStorage.setItem('role', body.data.user.role);\r\n                dispatch(authSuccess(body.token,authData.username, body.data.user.role));\r\n                dispatch(checkAuthTimeout(body.expires));\r\n            }).catch(err=> {\r\n                console.log(\"errorinside\",err.message);\r\n                dispatch(authFail(authFail(err)));\r\n            }); */\r\n            \r\n        \r\n    };\r\n};\r\n\r\nexport const setAuthRedirect = (value) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        value: value\r\n    };\r\n};\r\n\r\n// export const authCheckState = () => {\r\n//     return dispatch => {\r\n//         const token = localStorage.getItem('token');\r\n//         if (!token) {\r\n//             dispatch(logout());\r\n//         } else {\r\n//             const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n//             if (expirationDate <= new Date()) {\r\n//                 dispatch(logout());\r\n//             } else {\r\n//                 const username = localStorage.getItem('username');\r\n//                 const role = localStorage.getItem('role');\r\n//                 dispatch(authSuccess(token, username, role));\r\n//                 dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n//             }   \r\n//         }\r\n//     };\r\n// };\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport \"primeflex/primeflex.css\";\r\n\r\n// const footer = (<Button style={{width: \"100%\"}} label=\"View\"/>);\r\n\r\nclass MainDashTeacher extends React.Component {\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n  }\r\n\r\n  onCardSelectHandler(data){\r\n    this.props.selectCard(data.lecture_id);\r\n    this.props.setSectionSubject([data.section_code, data.subject_code, data.theory_fm, data.practical_fm]);\r\n    this.props.setRedirect();\r\n  }\r\n\r\n  render() {\r\n      // const header = (\r\n      //   <img\r\n      //     alt=\"Card\"\r\n      //     width=\"10%\"\r\n      //     src=\"showcase/demo/images/usercard.png\"\r\n      //     onError={(e) =>\r\n      //       (e.target.src =\r\n      //         \"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\")\r\n      //     }\r\n      //   />\r\n      // );\r\n      // {\r\n      //   \"batch\": \"073BCE\",\r\n      //   \"subCode\": \"SH603\",\r\n      //   \"group\": \"AB\",\r\n      //   \"subName\": \"Numerical Methods\",\r\n      //   \"sem\": \"3/1\",\r\n      //   \"sems\": \"III/I\"\r\n      // }\r\n      // let assignedCourses = [\r\n      //   { title:\"PUC CT652\", subTitle:\"Database Management System\",section:\"074BCT\"},\r\n      //   { title:\"PUC CT652\", subTitle:\"Database Management System\",section:\"074BCT\"},\r\n      //   { title:\"PUC CT652\", subTitle:\"Database Management System\",section:\"074BCT\"},\r\n      //   { title:\"PUC CT652\", subTitle:\"Database Management System\",section:\"074BCT\"},\r\n      // ]\r\n    return (<>\r\n        <h3>Choose your subject and see Student details.</h3>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.classes.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(data)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n          {/* {{{<CourseCard title=\"PUC CT652\" subTitle=\"Database Management System\" section=\"074BCT\"/>\r\n          <Card\r\n            title=\"PUC CT652\"\r\n            subTitle=\"Database Management System\"\r\n            style={{ width: \"20em\" }}\r\n            className=\"p-mb-2 p-mr-3\"\r\n            footer={footer}\r\n          >\r\n\r\n\r\n            <span className=\"p-tag p-badge-secondary p-tag-rounded\">074BCT</span>\r\n          \r\n            <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n          </Card>\r\n          <Card\r\n            title=\"PUC CT652\"\r\n            subTitle=\"Database Management System\"\r\n            style={{ width: \"20em\" }}\r\n            className=\"p-mb-2 p-mr-3\"\r\n            footer={footer}\r\n          >\r\n\r\n\r\n            <span className=\"p-tag p-badge-secondary p-tag-rounded\">074BCT</span>\r\n            <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n          </Card>\r\n          <Card\r\n            title=\"PUC CT652\"\r\n            subTitle=\"Database Management System\"\r\n            style={{ width: \"20em\" }}\r\n            className=\"p-mb-2 p-mr-3\"\r\n            footer={footer}\r\n          >\r\n          \r\n\r\n            <span className=\"p-tag p-badge-secondary p-tag-rounded\">074BCT</span>\r\n            <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n          </Card>}}} */}\r\n\r\n        </div>}\r\n      {this.props.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    classes: state.teacher.classes,\r\n    infoBox: state.teacher.infoBox,\r\n    redirect: state.auth.redirect,\r\n    loading: state.teacher.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (Class) => dispatch(actions.setActiveClass(Class)),\r\n    setSectionSubject: (value) => dispatch(actions.setActiveSectionSubject(value)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n    setRedirect: () => dispatch(setAuthRedirect(<Redirect to='/marksview'/>))\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashTeacher );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport './DataTable.css';\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.activeClass) this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        this.props.setRedirectNULL();\r\n        let i;\r\n        for(i=0;i<this.props.classStudentValues.length;i++){\r\n            if (this.props.classStudentValues[i].classId === this.props.activeClass){\r\n                this.props.setActiveStudentIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.classStudentValues.length && this.props.activeClass !== null){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            // let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass, { // TODO: change the hardcoded student list fetch, this.props.activeClass\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.props.setClassStudentValues({classId:this.props.activeClass, data: res.data}); // TODO: get fullmarks as well\r\n                    this.props.setActiveStudentIndex(this.props.classStudentValues.length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.classStudentValues[this.props.classIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3 style={{color: '#B22222'}}>Marks Summary View : Assessment and Practical Marks are NOT Editable</h3>\r\n                            <div className=\"p-col p-offset-11\">\r\n                                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n                            </div>\r\n                            <DataTable ref={(el) => this.dt = el}  value={recordDatas.data} header={\"Student Data for Section \"+this.props.sectionSubject[0]+\" of Subject with Subject Code : \"+this.props.sectionSubject[1]}>\r\n                                <Column field=\"username\" header=\"RollNo\" sortable></Column>\r\n                                <Column field=\"full_name\" header=\"Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\" sortable></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\" sortable></Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        loading: state.teacher.loading,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setRedirectNULL: () => dispatch(setAuthRedirect(null)),\r\n        setClassStudentValues: (values) => dispatch(actions.setClassStudentValues(values)),\r\n        setActiveStudentIndex: (value) => dispatch(actions.setActiveStudentIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport { Button } from 'primereact/button';\r\nimport './DataTable.css';\r\nimport * as uris from '../../store/uris';\r\nimport { isInt } from '@fullcalendar/core';\r\n\r\nclass DataTableEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = { data: null}\r\n        this.toast = null;\r\n        this.onMarksSubmitHandler = this.onMarksSubmitHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.activeClass) {\r\n            this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        } else {\r\n            this.setState({data: this.props.classStudentValues[this.props.classIndex].data});\r\n        }        \r\n    }\r\n\r\n    onEditorValueChange(stateItem, props, value) {\r\n        let updatedProducts = [...props.value];\r\n        let update = false;\r\n        if (!isInt(parseInt(value))){\r\n            updatedProducts[props.rowIndex][props.field] = 0;\r\n            this.setState({ [`${stateItem}`]: updatedProducts });\r\n            return\r\n        }\r\n        switch (props.field){\r\n            case \"theory_marks\": update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[2]);\r\n                break;\r\n            case \"practical_marks\": update = (parseInt(value) >=0 && parseInt(value) <= this.props.sectionSubject[3]);\r\n                break;\r\n            default: update = false;\r\n        }\r\n        if (update) {\r\n            updatedProducts[props.rowIndex][props.field] = parseInt(value);\r\n            this.setState({ [`${stateItem}`]: updatedProducts })\r\n        }\r\n    }\r\n\r\n    inputTextEditor(stateItem, props, field) {\r\n        return <InputText style={{width: \"5em\"}} type=\"number\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(stateItem, props, e.target.value)} />;\r\n    }\r\n\r\n    AssessmentEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'theory_marks');\r\n    }\r\n\r\n    PracticalEditor(stateItem, props) {\r\n        return this.inputTextEditor(stateItem, props, 'practical_marks');\r\n    }\r\n\r\n    onMarksSubmitHandler(event){\r\n        event.preventDefault();\r\n        // let tempData = {...this.props.classStudentValues[this.props.classIndex]};\r\n        // tempData.sem = (parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2]);\r\n        // let temo = {classId:tempData.classId, sem:tempData.sem, datas: tempData.data};\r\n        // this.props.submitMarks(tempData);\r\n        // console.log(tempData)\r\n        this.props.updateValues(this.state.data);\r\n        fetch(uris.FETCH_CLASS_STUDENT_LIST+this.props.activeClass,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.data)\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.status === 'success'){\r\n                    this.toast.show({severity: 'info', summary: 'Submission Succeded', detail: 'The Marks has been Successfully Updated!!!'});\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"datatable-editing\">\r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <div className=\"card\">\r\n                    <h3 style={{color: '#228B22'}}>Marks Editing View : Assessment and Practical Marks are Editable</h3>\r\n                    <div style={{padding: \"10px 0\", display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                        <Button label=\"Confirm & Submit\" onClick={this.onMarksSubmitHandler}/>\r\n                    </div>\r\n                    <DataTable value={this.state.data} editMode=\"cell\" className=\"editable-cells-table\" header={this.props.activeClass ? \"Student Data for Section \"+this.props.sectionSubject[0]+\" of Subject with Subject Code : \"+this.props.sectionSubject[1] : null}>\r\n                        <Column field=\"username\" header=\"RollNo\" sortable></Column>\r\n                        <Column field=\"full_name\" header=\"Name\"></Column>\r\n                        <Column field=\"theory_marks\" header=\"Assessment\" editor={(props) => this.AssessmentEditor('data', props)}></Column>\r\n                        <Column field=\"practical_marks\" header=\"Practical\" editor={(props) => this.PracticalEditor('data', props)}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoBox: state.teacher.infoBox,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        activeClass: state.teacher.activeClass,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        updateValues: (value) => dispatch(actions.updateClassStudentValues(value)),\r\n\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableEdit );\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport '../../App.css';\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            assessmentData: null,\r\n            practicalData: null,\r\n            max: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n        if (this.props.classIndex !== null) {\r\n            let data = this.props.classStudentValues[this.props.classIndex].data\r\n            let count = { assessment : [], practical : []}\r\n            for (let i = 0; i < data.length; i++) {\r\n                let aval = data[i].theory_marks\r\n                let pval = data[i].practical_marks\r\n                if (count.assessment.hasOwnProperty(aval)){\r\n                    count.assessment[`${aval}`] += 1\r\n                } else {\r\n                    count.assessment[`${aval}`] = 1\r\n                }\r\n                if (count.practical.hasOwnProperty(pval)){\r\n                    count.practical[`${pval}`] += 1\r\n                } else {\r\n                    count.practical[`${pval}`] = 1\r\n                }\r\n            }\r\n            this.setState({\r\n                assessmentData: {\r\n                    labels: Object.keys(count.assessment),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Assessment Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.assessment)\r\n                        }\r\n                    ]\r\n                },\r\n                practicalData: {\r\n                    labels: Object.keys(count.practical),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Frequency of Practical Marks',\r\n                            backgroundColor: '#42A5F5',\r\n                            data: Object.values(count.practical)\r\n                        }\r\n                    ]\r\n                },\r\n                max: [Math.max(...Object.values(count.assessment)), Math.max(...Object.values(count.practical))]\r\n            })\r\n        }\r\n    }\r\n\r\n    getOption(max) {\r\n        console.log(max)\r\n        return {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#495057'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#495057'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: max,\r\n                        fontColor: '#495057'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Assessment Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.assessmentData} options={this.getOption(this.state.max[0]+1)} />\r\n                </div><hr/>\r\n                <h1 style={{color: '#1E90FF'}}>{this.props.sectionSubject[0]} Practical Marks</h1>\r\n                <div className=\"card\" style={{padding: '25px'}}>\r\n                    <Chart type=\"bar\" data={this.state.practicalData} options={this.getOption(this.state.max[1]+1)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        classStudentValues: state.teacher.classStudentValues,\r\n        classIndex: state.teacher.activeClassStudentValuesIndex,\r\n        sectionSubject: state.teacher.activeSectionSubject,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( BarChart );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n            {/* <div className=\"timeago\"> 3min Ago</div> */}\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Post extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            value2: ''\r\n        }\r\n        this.onPostSend = this.onPostSend.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onPostSend(){\r\n        fetch(uris.SUBMIT_POST, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                section_id: this.props.activeSection[this.props.activeIndex].section_id,\r\n                person_id : this.props.username,\r\n                content: this.state.value2\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Post Added Successfully!!!'});\r\n            fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {console.log(res);this.setState({data: res.data})})\r\n                .catch(err => console.log(err));\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              <div>\r\n              <Toast ref={(el) => this.toast = el} />\r\n                     <div className=\"p-grid p-col p-ml-2 p-mt-4 p-shadow-2 p-mb-4 noticeBOX\">\r\n                        <div className=\"p-col-1\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\"/>\r\n                        </div>\r\n             \r\n                        <div className=\"fixInput p-col\">\r\n                            <InputTextarea className=\"p-inputtextarea \" value={this.state.value2} onChange={(e) => this.setState({value2: e.target.value})}  rows={2} cols={30}  autoResize />\r\n                        </div>\r\n                        <div className=\"p-col-2\">\r\n                            <Button label=\"SEND\"  onClick={this.onPostSend}/>\r\n                        </div>               \r\n                    </div>     \r\n       \r\n                    {this.state.data ? this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\"></div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n                {/* <div className=\"p-col-1\">\r\n                    3min Ago\r\n                </div> */}\r\n          </Fragment>\r\n          );\r\n      }) : null}\r\n              </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username,\r\n    activeSection: state.teacher.classes,\r\n    activeIndex: state.teacher.activeClassStudentValuesIndex \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n  \r\n  \r\n \r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n    componentDidMount(){        \r\n        if (this.props.activeClass === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Class Selected!!!'});\r\n    }\r\n    render() {\r\n    return (\r\n        <Fragment>\r\n            {this.props.infoBox ? <Redirect to='/'/> : null}\r\n        <div className=\"p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        </Fragment>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeClass: state.teacher.activeClass,\r\n        infoBox: state.teacher.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)( Timeline );\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashTeacher from './TeacherMain';\r\nimport DataTableView from './ViewTable';\r\nimport DataTableEdit from './EditTable';\r\nimport BarChart from './BarChart';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/teacher';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Teacher extends Component{\r\n\t// constructor(){\r\n\t// \tsuper();\r\n\t// }\r\n\tcomponentDidMount(){\r\n        // this.props.resetTeacherState();\r\n        fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.props.onSetClass(res.data))\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashTeacher}/>\r\n            \t<Route path=\"/timeline\" exact component={Timeline}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/marksentry\" exact component={DataTableEdit}/>\r\n            \t<Route path=\"/statistics\" exact component={BarChart}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetClass: (values) => dispatch(actions.setClasses(values)),\r\n        // resetTeacherState: () => dispatch(actions.resetTeacherState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teacher);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveSem = (sem)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM,\r\n        value: sem\r\n    }\r\n}\r\n\r\nexport const setSemSubjectValues = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setSems=(value)=>{\r\n    return {\r\n        type: actionTypes.SET_STUDENT_SEMS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setInfoBox = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_INFOBOX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const resetStudentState = () => {\r\n    return {\r\n        type: actionTypes.RESET_STUDENT_DEFAULTS\r\n    }\r\n};\r\n\r\nexport const setActiveSemIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from 'primereact/toast';\r\nimport * as actions from '../../store/actions/student';\r\n// import {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport \"primeflex/primeflex.css\";\r\n\r\n// const footer = (<Button style={{width: \"100%\"}} label=\"View\"/>);\r\n\r\nclass MainDashStudent extends React.Component {\r\n  constructor(){\r\n      super();\r\n      this.state = {\r\n          redirect: null\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.infoBox) {\r\n\t\t\tconsole.log('here')\r\n      this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n    }\r\n    this.props.setInfoBoxNULL();\r\n  }\r\n\r\n  onCardSelectHandler(index){\r\n\t\tthis.props.selectCard(index);\r\n\t\tthis.setState({redirect: <Redirect to='/marksview'/>});\r\n    // this.props.setRedirect();\r\n  }\r\n\r\n  render() {\r\n    return (<>\r\n        <h3>Choose your subject and see Student details.</h3>\r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : \r\n          <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n          {this.props.sems.map((data, index) => {\r\n                                return (<Card key={index} title={\"Semester Card\"} subTitle={\"Semester No.\"} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"View\"\r\n                                            onClick={() => this.onCardSelectHandler(index+1)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.value}</span>\r\n                                          {/* <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.group}</span> */}\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n        </div>}\r\n      {this.state.redirect}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sems: state.student.sems,\r\n    infoBox: state.student.infoBox,\r\n    // redirect: state.auth.redirect,\r\n    loading: state.student.loading    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectCard: (sem) => dispatch(actions.setActiveSem(sem)),\r\n    setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n    // setRedirect: () => dispatch(setAuthRedirect(<Redirect to='/marksview'/>))\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( MainDashStudent );\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\n// import {setAuthRedirect} from '../../store/actions/auth';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/student';\r\n// import './DataTable.css';\r\n\r\nclass DataTableView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onRequestRecheck = this.onRequestRecheck.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.activeSem === null)  this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Semester Selected!!!'});\r\n        // this.props.setRedirectNULL();\r\n        let i;\r\n        for(i=0;i<this.props.semSubjectValues.length;i++){\r\n            if (this.props.semSubjectValues[i].sem === this.props.activeSem){\r\n                this.props.setActiveSemIndex(i);\r\n                break;\r\n            }\r\n        }\r\n        //fetch(`http://localhost:3000/api/record/class?class=${this.props.tutorClass}&subjectCode=${this.props.subjectCode}&sem=1`)\r\n        if (i === this.props.semSubjectValues.length && this.props.activeSem !== null){\r\n            // let dat = this.props.classes.find((cls) => this.props.activeClass === cls.batch+cls.subCode+cls.group);\r\n            // let sem = ((parseInt(this.props.activeSem[0])-1)*2+parseInt(this.props.activeSem[2])).toString();\r\n            fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+this.props.username+'&semester='+this.props.activeSem.toString(), {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.props.setSemSubjectValues({sem: this.props.activeSem, data: res.data});\r\n                    this.props.setActiveSemIndex(this.props.semSubjectValues.length-1);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n        // this.props.setSemSubjectValues([{username: \"SH401\", name:\"Engineering Mathematics\", test: \"20\", practical: \"50\"},\r\n        //                                 {username: \"CT401\", name:\"Computer Programming\", test: \"20\", practical: \"50\"},\r\n        //                                 {username: \"ME401\", name:\"Engineering Drawing\", test: \"20\", practical: \"50\"},\r\n        //                                 {username: \"SH402\", name:\"Engineering Physics\", test: \"20\", practical: \"50\"},\r\n        //                                 {username: \"CE401\", name:\"Applied Mechanics\", test: \"20\", practical: \"50\"},\r\n        //                                 {username: \"EE401\", name:\"Basic Electrical Engineering\", test: \"20\", practical: \"50\"}]);\r\n        // this.props.setActiveSemIndex(0);\r\n    }\r\n\r\n    onRequestRecheck(rowData){\r\n        fetch(uris.REQUEST_STUDENT_MARKS_RECHECK, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                person_id: this.props.username,\r\n                subject_id: rowData.subject_id\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.toast.show({severity: 'info', summary: 'Info\"', detail: 'Marks Recheck Request Sent!!!'})})\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"Request Recheck\" className=\"p-button-rounded p-button-danger\" onClick={() => this.onRequestRecheck(rowData)}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let recordDatas = this.props.semSubjectValues[this.props.semIndex];\r\n        return (\r\n            <Fragment>\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n                <Fragment>\r\n                    {recordDatas ? (\r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <h3>Marks Summary View : Assessment and Practical Marks are NOT Editable</h3>\r\n                            <DataTable value={recordDatas.data} header=\"Data\">\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\"></Column>\r\n                                <Column body={this.actionBodyTemplate}></Column>\r\n                            </DataTable>\r\n                        </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSem: state.student.activeSem,\r\n        username: state.auth.username,\r\n        semSubjectValues: state.student.semSubjectValues,\r\n        semIndex: state.student.activeSemSubjectValuesIndex,\r\n        loading: state.student.loading,\r\n        infoBox: state.student.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // setRedirectNULL: () => dispatch(setAuthRedirect(null)),\r\n        setSemSubjectValues: (values) => dispatch(actions.setSemSubjectValues(values)),\r\n        setActiveSemIndex: (value) => dispatch(actions.setActiveSemIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) )\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( DataTableView );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_NOTIFICATIONS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return(\r\n              \r\n  <div className=\"p-grid styleInbox p-mt-4 \">\r\n      {this.state.data.map((dat, index) => {\r\n          return (\r\n            <div key={index} className=\"p-col-12 itstyle\">\r\n            <img src=\"https://i.imgur.com/IqICwKK.jpg\" width=\"45px\" height=\"45px\" alt=\"\"/>                    \r\n             <div className=\"inboxtext\">{dat.message}</div>\r\n            {/* <div className=\"timeago\"> 3min Ago</div> */}\r\n        </div>\r\n          );\r\n      })}\r\n  </div> \r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\n\r\nexport default connect( mapStateToProps, null )( Inbox );\r\n  ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as uris from '../../store/uris';\r\nimport \"../../App.css\";\r\nclass Post extends React.Component{\r\n         constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch(uris.FETCH_POSTS+'?person_id='+this.props.username, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({data: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n      render(){\r\n          return( \r\n            <div className=\" p-grid  p-ml-2  p-pt-1 p-shadow-2  \">    \r\n            {this.state.data.map((dat, index) => {\r\n          return (<Fragment key={index}>\r\n              <div className=\"p-col-12\">\r\n                    <div className=\"p-row p-p-2 fixPadd\">\r\n                            <img src=\"https://i.imgur.com/hLwNrtw.jpg\" alt=\"\" width=\"20px\"/> \r\n                            {dat.full_name}<div className=\"fixedSUB\">{dat.subject}</div>\r\n                    </div>\r\n                    <div className=\"p-row p-p-2\">\r\n                        {dat.content}</div>\r\n                </div>\r\n                {/* <div className=\"p-col-1\">\r\n                    3min Ago\r\n                </div> */}\r\n          </Fragment>\r\n          );\r\n      })}\r\n            </div>\r\n          );\r\n      }\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username   \r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, null )( Post );\r\n","import React from 'react';\r\nimport \"./Timeline.css\";\r\n\r\nimport Inbox from './InboxArea';\r\nimport Post from './PostArea';\r\n\r\nclass Timeline extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\" p-fluid wholeStyle\">\r\n           <div className=\"p-grid p-lg-12\">\r\n               <div className=\"p-col-7\">\r\n                   <Post/>\r\n                </div>\r\n            <div className=\"p-col-4 p-offset-1 p-shadow-2\">\r\n                <div className=\"header\">\r\n                    Inbox\r\n                </div>\r\n                <Inbox/>\r\n            </div>\r\n\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default Timeline;\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport MainDashStudent from './StudentMain';\r\nimport DataTableView from './ViewTable';\r\nimport Timeline from './Timeline';\r\nimport * as actions from '../../store/actions/student';\r\n// import * as uris from '../../store/uris';\r\n\r\nclass Student extends Component{\r\n\t// constructor(){\r\n\t// \tsuper();\r\n\t// }\r\n\tcomponentDidMount(){\r\n        this.props.resetStudentState();\r\n        this.props.setSems([{value: 1}, {value: 2}, {value: 3}, {value: 4},\r\n                            {value: 5}, {value: 6}, {value: 7}, {value: 8}])\r\n        // fetch(uris.FETCH_CLASS_LIST+this.props.username, {\r\n        //     method: 'GET',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Authorization': 'Bearer '+this.props.token\r\n        //     }\r\n        // })\r\n        //     .then(res => res.json())\r\n        //     .then(res => this.props.onSetClass(res.data))\r\n        //     .catch(err => console.log(\"Teacher err\", err))\r\n        /* componentDidMount(){\r\n            fetch(uris.STUDENT_MARKS+this.props.username+\"?fields=s1,s2,s3,s4,s5,s6,s7,s8\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+this.props.token\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(\"Here data:\",res.data);\r\n                    this.props.onFetched(res.data)})\r\n                .catch(err => console.log(\"Student err\", err))\r\n        } */\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={MainDashStudent}/>\r\n            \t<Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/studenttimeline\" exact component={Timeline}/>\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSems: (values) => dispatch(actions.setSems(values)),\r\n        resetStudentState: () => dispatch(actions.resetStudentState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Student);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setActiveTeacherUsername = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherClasses = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setActiveTeacherIndex = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setTeacherClassValues = (value) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_CLASS_VALUES,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const setInfoBox = (values) => {\r\n    return {\r\n        type: actionTypes.SET_ADMIN_INFOBOX,\r\n        value: values\r\n    }\r\n};\r\n\r\nexport const setTeacherDepartments = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const setTeachers = (value)=>{\r\n    return {\r\n        type: actionTypes.SET_ADMIN_TEACHERS,\r\n        value: value\r\n    }\r\n}\r\n\r\nexport const resetAdminState = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_DEFAULTS\r\n    }\r\n}\r\n\r\nexport const resetAdminTeacherClass = (value)=>{\r\n    return {\r\n        type: actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES\r\n    }\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../../index.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport CSVReader from 'react-csv-reader';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n// import TeacherService from '../../Service/TeacherService';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\n//import { FileUpload } from 'primereact/fileupload';\r\n// import { Rating } from 'primereact/rating';\r\nimport { Toolbar } from 'primereact/toolbar';\r\n//import { InputTextarea } from 'primereact/inputtextarea';\r\n// import { RadioButton } from 'primereact/radiobutton';\r\n// import { InputNumber } from 'primereact/inputnumber';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\nimport './AdminMain.css';\r\n\r\nclass AdminMain extends Component {\r\n    emptyTeacher = {\r\n        person_id: '',\r\n        username: '',\r\n        full_name: '',\r\n        email: '',\r\n        phone_no: '',\r\n        program_code: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            redirect: null,\r\n            teacherDialog: false,\r\n            department: [],\r\n            deleteTeacherDialog: false,\r\n            deleteTeachersDialog: false,\r\n            teacher: this.emptyTeacher,\r\n            selectedTeachers: null,\r\n            submitted: false,\r\n            globalFilter: null\r\n        };\r\n\r\n        // this.program_codes = [{program_code: 'Electronics & Computer Engineering'},\r\n        //                 {program_code: 'Civil Engineering'},\r\n        //                 {program_code: 'Electrical Engineering'}];\r\n\r\n        // this.teacherService = new TeacherService();\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.rightToolbarTemplate = this.rightToolbarTemplate.bind(this);\r\n        // this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveTeacher = this.saveTeacher.bind(this);\r\n        this.editTeacher = this.editTeacher.bind(this);\r\n        this.confirmDeleteTeacher = this.confirmDeleteTeacher.bind(this);\r\n        this.deleteTeacher = this.deleteTeacher.bind(this);\r\n        this.exportCSV = this.exportCSV.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.hideDeleteTeacherDialog = this.hideDeleteTeacherDialog.bind(this);\r\n        this.hideDeleteTeachersDialog = this.hideDeleteTeachersDialog.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.infoBox) {\r\n          this.toast.show({severity: 'info', summary: this.props.infoBox.summary, detail: this.props.infoBox.detail})\r\n        }\r\n        this.props.setInfoBoxNULL();// this.teacherService.getTeachers().then(data => this.setState({ teachers: data }));\r\n        fetch(uris.FETCH_DEPARTMENT_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.setState({department: res.data})})\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            teacher: this.emptyTeacher,\r\n            submitted: false,\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            teacherDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteTeacherDialog() {\r\n        this.setState({ deleteTeacherDialog: false });\r\n    }\r\n\r\n    hideDeleteTeachersDialog() {\r\n        this.setState({ deleteTeachersDialog: false });\r\n    }\r\n\r\n    saveTeacher() {\r\n        let state = { submitted: true };\r\n        if (this.state.teacher.full_name && this.state.teacher.email && this.state.teacher.phone_no && this.state.teacher.program_code) {\r\n            // let teachers = [...this.props.teachers];\r\n            // let teacher = {...this.state.teacher};\r\n            let toastMsg = null;\r\n            let method = null;\r\n            if (this.state.teacher.username) {\r\n                // const index = this.findIndexByUsername(this.state.teacher.username);\r\n                method = 'PATCH';\r\n                // teachers[index] = teacher;\r\n                toastMsg = 'Teacher Updated';\r\n            }\r\n            else {\r\n                // teachers.push(teacher);\r\n                method = 'POST';\r\n                toastMsg = 'Teacher Created';\r\n            }\r\n            let i;\r\n            for (i=0; i<this.state.department.length;i++){\r\n                if (this.state.department[i].dept_name === this.state.teacher.program_code.dept_name) break;\r\n            }\r\n            // if (i === this.state.department.length) i = this.state.department.length-1;\r\n            console.log(i)\r\n            let temp = {...this.state.teacher, dept_id: this.state.department[i].dept_id};\r\n            console.log(temp)\r\n            fetch(uris.ADD_TEACHER+this.state.teacher.person_id, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    // 'Authorization': 'Bearer '+this.props.token\r\n                },\r\n                body: JSON.stringify(temp)\r\n            })\r\n                .then(fetch(uris.FETCH_TEACHER_LIST, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        // 'Authorization': 'Bearer '+this.props.token\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {console.log(res);this.props.setTeachers(res.data)})\r\n                    .catch(err => console.log(\"Teacher err\", err)))\r\n                .catch(err => console.log(\"Teacher err\", err))\r\n            this.toast.show({ severity: 'success', summary: 'Successful', detail: toastMsg, life: 3000 });\r\n\r\n            state = {\r\n                ...state,\r\n                teacherDialog: false,\r\n                teacher: this.emptyTeacher\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    editTeacher(teacher) {\r\n        console.log(teacher);\r\n        this.setState({\r\n            teacher: { ...teacher },\r\n            teacherDialog: true\r\n        });\r\n    }\r\n\r\n    teacherClickHandler(rowData){\r\n        this.props.selectCard(rowData.person_id);\r\n\t\tthis.setState({redirect: <Redirect to='/teachersessions'/>});\r\n    }\r\n\r\n    confirmDeleteTeacher(teacher) {\r\n        this.setState({\r\n            teacher,\r\n            deleteTeacherDialog: true\r\n        });\r\n    }\r\n\r\n    deleteTeacher() {\r\n        // let teachers = this.state.teachers.filter(val => val.id !== this.state.teacher.id); //TODO: complete delete\r\n        // this.setState({\r\n        //     teachers,\r\n        //     deleteTeacherDialog: false,\r\n        //     teacher: this.emptyTeacher\r\n        // });\r\n        this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Teacher Deleted', life: 3000 });\r\n    }\r\n\r\n    findIndexByUsername(id) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.props.teachers.length; i++) {\r\n            if (this.props.teachers[i].username === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId() {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    exportCSV() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteTeachersDialog: true });\r\n    }\r\n\r\n    // deleteSelectedTeachers() {\r\n    //     let teachers = this.state.teachers.filter(val => !this.state.selectedTeachers.includes(val));\r\n    //     this.setState({\r\n    //         teachers,\r\n    //         deleteTeachersDialog: false,\r\n    //         selectedTeachers: null\r\n    //     });\r\n    //     this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Teachers Deleted', life: 3000 });\r\n    // }\r\n\r\n    onInputChange(e, name) {\r\n        const val = (e.target && e.target.value) || '';\r\n        let teacher = {...this.state.teacher};\r\n        teacher[`${name}`] = val;\r\n\r\n        this.setState({ teacher });\r\n    }\r\n\r\n    onProgramChange(e) { this.setState({teacher: {...this.state.teacher, program_code: e.value}})}\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                {/* <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedTeachers || !this.state.selectedTeachers.length} /> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    rightToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <CSVReader onFileLoaded={(data, fileInfo) => console.log(data[0])} />\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={this.exportCSV} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    // statusBodyTemplate(rowData) {\r\n    //     return <span className={`teacher-badge status-${rowData.status.toLowerCase()}`}>{rowData.status}</span>;\r\n    // }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => this.editTeacher(rowData)} />\r\n                <Button icon='pi pi-briefcase' className=\"p-button-rounded p-button-info p-mr-2\" onClick={() => this.teacherClickHandler(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger p-mr-2\" onClick={() => this.confirmDeleteTeacher(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const header = (\r\n            <div className=\"table-header\">\r\n                <h5 className=\"p-m-0\">Manage Teachers</h5>\r\n                <span className=\"p-input-icon-left\">\r\n                    <i className=\"pi pi-search\" />\r\n                    <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Search...\" />\r\n                </span>\r\n            </div>\r\n        );\r\n        const teacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveTeacher} />\r\n            </React.Fragment>\r\n        );\r\n        const deleteTeacherDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteTeacherDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteTeacher} />\r\n            </React.Fragment>\r\n        );\r\n        // const deleteTeachersDialogFooter = (\r\n        //     <React.Fragment>\r\n        //         <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteTeachersDialog} />\r\n        //         <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedTeachers} />\r\n        //     </React.Fragment>\r\n        // );\r\n\r\n        return (<Fragment>\r\n            <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n            {this.props.loading ?  <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> :\r\n            <div className=\"datatable-crud-demo\">\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" style={{marginTop: '20px'}} left={this.leftToolbarTemplate} right={this.rightToolbarTemplate}></Toolbar>\r\n                {/* selection={this.state.selectedTeachers} onSelectionChange={(e) => this.setState({ selectedTeachers: e.value })} */}\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.teachers}\r\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} teachers\"\r\n                    globalFilter={this.state.globalFilter}\r\n                    header={header}>\r\n\r\n                    {/* <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column> */}\r\n                    <Column field=\"username\" style={{width: '150px'}} header=\"UserName\" sortable></Column>\r\n                    <Column field=\"full_name\" style={{width: '150px'}} header=\"Full Name\" sortable></Column>\r\n                    <Column field=\"email\" style={{width: '350px'}} header=\"Email\" ></Column>\r\n                    <Column field=\"phone_no\" style={{width: '120px'}} header=\"Phone No\"  ></Column>\r\n                    <Column field=\"dept_name\" header=\"Department\" sortable></Column>\r\n                    <Column body={this.actionBodyTemplate}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={this.state.teacherDialog} style={{ width: '450px' }} header=\"Teacher Details\" modal className=\"p-fluid\" footer={teacherDialogFooter} onHide={this.hideDialog}>\r\n                {/* {this.state.teacher.image && <img src={`showcase/demo/images/teacher/${this.state.teacher.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={this.state.teacher.image} className=\"teacher-image\" />} */}\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"full_name\">Name</label>\r\n                    <InputText id=\"full_name\" value={this.state.teacher.full_name} onChange={(e) => this.onInputChange(e, 'full_name')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.full_name })} />\r\n                    {this.state.submitted && !this.state.teacher.full_name && <small className=\"p-invalid\">Name is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <InputText id=\"email\" value={this.state.teacher.email} onChange={(e) => this.onInputChange(e, 'email')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.email })} />\r\n                    {this.state.submitted && !this.state.teacher.email && <small className=\"p-invalid\">Email is required.</small>}\r\n                </div>\r\n                 <div className=\"p-field\">\r\n                    <label htmlFor=\"phone_no\">Phone No:</label>\r\n                    <InputText id=\"phone_no\" value={this.state.teacher.phone_no} onChange={(e) => this.onInputChange(e, 'phone_no')} required autoFocus className={classNames({ 'p-invalid': this.state.submitted && !this.state.teacher.phone_no })} />\r\n                    {this.state.submitted && !this.state.teacher.phone_no && <small className=\"p-invalid\">Phone No is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Department\">Department</label>\r\n                    <Dropdown value={this.state.teacher.program_code} options={this.state.department} onChange={this.onProgramChange} optionLabel=\"dept_name\" required placeholder=\"Select a Department\"/>\r\n                    {this.state.submitted && !this.state.teacher.program_code && <small className=\"p-invalid\">Department is required.</small>}\r\n                </div>\r\n{/*                     \r\n                <div className=\"p-field\">\r\n                    <label className=\"p-mb-3\">Subject</label>\r\n                    <div className=\"p-formgrid p-grid\">\r\n                        <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category1\" name=\"category\" value=\"074BCT\" onChange={this.onCategoryChange} checked={this.state.teacher.category === 'Accessories'} />\r\n                            <label htmlFor=\"category1\">074BCT</label>\r\n                        </div>\r\n                         <div className=\"p-field-radiobutton p-col-6\">\r\n                            <RadioButton inputId=\"category2\" name=\"category\" value=\"074BCT\" onChange={this.onCategoryChange} checked={this.state.teacher.category === 'Accessories'} />\r\n                            <label htmlFor=\"category1\">074BCE</label>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div> */}\r\n\r\n            </Dialog>\r\n\r\n            <Dialog visible={this.state.deleteTeacherDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteTeacherDialogFooter} onHide={this.hideDeleteTeacherDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {this.state.teacher && <span>Are you sure you want to delete <b>{this.state.teacher.email}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* <Dialog visible={this.state.deleteTeachersDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteTeachersDialogFooter} onHide={this.hideDeleteTeachersDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {this.state.teacher && <span>Are you sure you want to delete the selected teachers?</span>}\r\n                </div>\r\n            </Dialog> */}\r\n        </div>}\r\n        {this.state.redirect}\r\n        </Fragment>\r\n        );\r\n    }\r\n}\r\n                \r\nconst mapStateToProps = state => {\r\n    return {\r\n      teachers: state.admin.teachers,\r\n      infoBox: state.admin.infoBox,\r\n    //   redirect: state.auth.redirect,\r\n      loading: state.admin.loading    \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      selectCard: (Class) => dispatch(actions.setActiveTeacherUsername(Class)),\r\n      setInfoBoxNULL: () => dispatch( actions.setInfoBox(null) ),\r\n      setTeachers: (value) => dispatch(actions.setTeachers(value)),\r\n    //   setRedirect: () => dispatch(setAuthRedirect(<Redirect to='/marksview'/>))\r\n    };\r\n  };\r\n  \r\n  export default connect( mapStateToProps, mapDispatchToProps )( AdminMain );\r\n","import React, { Component, Fragment } from 'react';\r\n// import classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Card } from \"primereact/card\";\r\nimport { Button } from \"primereact/button\";\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\n// import { InputText } from 'primereact/inputtext';\r\nimport * as uris from '../../store/uris';\r\nimport * as actions from '../../store/actions/admin';\r\nimport './TeacherSessions.css';\r\n\r\nclass TeacherSessions extends Component {\r\n    emptyLecture = {\r\n        batch: '',\r\n        subject_code: '',\r\n        group_code: '',\r\n        program_code: '',\r\n        semester: ''\r\n    }\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            redirect: null,\r\n            lectureDialog: false,\r\n            submitted: false,\r\n            displayConfirmation: false,\r\n            lectureSel: {\r\n                batch_is: '',\r\n                program_id: '',\r\n                subject_id: '',\r\n                section_id: '',\r\n                semester: ''\r\n            },\r\n            lecture: this.emptyLecture,\r\n            batchs: ['074'],\r\n            programs: [\"BCT\",\"BEX\"],\r\n            subjects: [],\r\n            sections: [],\r\n            semesters: [1,2,3,4,5,6,7,8]\r\n        }\r\n        this.addClass = this.addClass.bind(this);\r\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveTeacher = this.saveTeacher.bind(this);\r\n        this.onProgramChange = this.onProgramChange.bind(this);\r\n        this.onBatchChange = this.onBatchChange.bind(this);\r\n        this.onSubjectChange = this.onSubjectChange.bind(this);\r\n        this.onGroupChange = this.onGroupChange.bind(this);\r\n        this.onSemChange = this.onSemChange.bind(this);\r\n        this.onDeleteLecture = this.onDeleteLecture.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n    }\r\n\r\n    componentDidMount(){        \r\n        if (this.props.activeTeacher === null) { this.props.setInfoBox({summary:\"Info Message\", detail: 'No Active Teacher Selected!!!'}); }\r\n        else {\r\n            let i;\r\n            for(i=0;i<this.props.teacherClassValues.length;i++){\r\n                if (this.props.teacherClassValues[i].username === this.props.activeTeacher){\r\n                    this.props.setActiveTeacherIndex(i);\r\n                    break;\r\n                }\r\n            }\r\n            if (i === this.props.teacherClassValues.length && this.props.activeTeacher !== null){\r\n                fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        // 'Authorization': 'Bearer '+this.props.token\r\n                    }\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                        this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data}); // TODO: get fullmarks as well\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    addClass(){\r\n        fetch(uris.FETCH_BATCH_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.setState({batchs: res.data}))\r\n            .catch(err => console.log(err));\r\n        fetch(uris.FETCH_PROGRAM_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => this.setState({programs: res.data}))\r\n            .catch(err => console.log(err));\r\n        this.setState({\r\n            teacher: this.emptyLecture,\r\n            submitted: false,\r\n            lectureDialog: true\r\n        });\r\n    }\r\n\r\n    leftToolbarTemplate() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={this.addClass} />\r\n                {/* <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={this.confirmDeleteSelected} disabled={!this.state.selectedTeachers || !this.state.selectedTeachers.length} /> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            lectureDialog: false\r\n        });\r\n    }\r\n\r\n    saveTeacher() {\r\n        let state = { submitted: true };\r\n        if (this.state.lecture.group_code) {\r\n            let data = { person_id: this.props.activeTeacher,\r\n                        section_id: this.state.lectureSel.section_id,\r\n                        subject_id: this.state.lectureSel.subject_id}\r\n                        console.log(data)\r\n            fetch(uris.FETCH_CLASS_LIST, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    // 'Authorization': 'Bearer '+this.props.token\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => {\r\n                    this.props.resetTeacherClasses();\r\n                    fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            // 'Authorization': 'Bearer '+this.props.token\r\n                        }\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data}); // TODO: get fullmarks as well\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                })\r\n                .catch(err => console.log(\"Teacher err\", err))\r\n            this.toast.show({ severity: 'success', summary: 'Successful', detail: 'Lecture Added', life: 3000 });\r\n            state = {\r\n                ...state,\r\n                lectureDialog: false,\r\n                lecture: this.emptyLecture\r\n            };\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    onBatchChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.batch = e.value;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, batch_id: e.value.batch_id} });\r\n    }\r\n\r\n    onProgramChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.program_code = e.value;\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, program_id: e.value.program_id} });\r\n        fetch(uris.FETCH_SECTION_LIST+'?batch_id='+this.state.lectureSel.batch_id+'&program_id='+e.value.program_id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({sections: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    onGroupChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.group_code = e.value\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, section_id: e.value.section_id} });\r\n        // fetch(uris.FETCH_SUBJECT_LIST+'?program_id='+this.state.lectureSel.program_id+'&semester='+e.value.program_id, {\r\n        //     method: 'GET',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         // 'Authorization': 'Bearer '+this.props.token\r\n        //     }\r\n        // })\r\n        //     .then(res => res.json())\r\n        //     .then(res => {console.log(res);this.setState({sections: res.data})})\r\n        //     .catch(err => console.log(err));\r\n    }\r\n\r\n    onSemChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.semester = e.value\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, semester: e.value} });\r\n        fetch(uris.FETCH_SUBJECT_LIST+'?program_id='+this.state.lectureSel.program_id+'&semester='+e.value, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {console.log(res);this.setState({subjects: res.data})})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onSubjectChange(e) {\r\n        let temp = this.state.lecture;\r\n        temp.subject_code = e.value\r\n        this.setState({ lecture: temp, lectureSel: {...this.state.lectureSel, subject_id: e.value.subject_id}  });\r\n    }\r\n\r\n    onDeleteLecture(){\r\n        fetch(uris.FETCH_CLASS_LIST+this.props.teacherClassValues[this.props.teacherIndex].data[this.state.delIndex].lecture_id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.props.resetTeacherClasses();\r\n                    fetch(uris.FETCH_CLASS_LIST+'?person_id='+this.props.activeTeacher, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            // 'Authorization': 'Bearer '+this.props.token\r\n                        }\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            this.props.setActiveTeacherIndex(this.props.teacherClassValues.length);\r\n                            this.props.setActiveTeacherClasses({username:this.props.activeTeacher, data: res.data}); // TODO: get fullmarks as well\r\n                        })\r\n                        .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true,\r\n            delIndex: position\r\n        };\r\n        this.setState(state);\r\n    }\r\n\r\n    onHide(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n    }\r\n\r\n    onApprove(name) {\r\n        this.setState({\r\n            [`${name}`]: false\r\n        });\r\n        this.onDeleteLecture();\r\n    }\r\n\r\n    renderFooter(name) {\r\n        return (\r\n            <div>\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => this.onHide(name)} className=\"p-button-text\" />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() => this.onApprove(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render (){\r\n        const lectureDialogFooter = (\r\n            <React.Fragment>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Add\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveTeacher} />\r\n            </React.Fragment>\r\n        );\r\n        return (\r\n            <Fragment>                \r\n                <Toast ref={(el) => this.toast = el} />\r\n                {this.props.infoBox ? <Redirect to='/'/> : null}\r\n                {this.props.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : <Fragment>\r\n            {/* <div className='additionContainer'>\r\n                <Dropdown value={{department: this.state.teacher.department}} options={this.cities} onChange={this.onCityChange} optionLabel=\"department\" required placeholder=\"Select a Department\"/>\r\n                <Dropdown value={{department: this.state.teacher.department}} options={this.cities} onChange={this.onCityChange} optionLabel=\"department\" required placeholder=\"Select a Department\"/>\r\n                <Dropdown value={{department: this.state.teacher.department}} options={this.cities} onChange={this.onCityChange} optionLabel=\"department\" required placeholder=\"Select a Department\"/>\r\n            </div> */}\r\n            {/* <Card key={index} title={data.subCode} subTitle={data.subName} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-2 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"Remove\"\r\n                                            onClick={() => this.onCardSelectHandler(data)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.batch}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.group}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card> */}\r\n                {this.props.teacherClassValues.length>this.props.teacherIndex ? <Fragment>\r\n                    <Toolbar style={{marginTop: '20px'}} className=\"p-mb-4\" left={this.leftToolbarTemplate}></Toolbar>\r\n                <div className=\"p-lg-12 p-d-flex p-flex-wrap p-flex-column p-flex-lg-row\">\r\n                {this.props.teacherClassValues.length === 0 ? null : this.props.teacherClassValues[this.props.teacherIndex].data.map((data, index) => {\r\n                                return (<Card key={index} title={data.subject_code} subTitle={data.title} style={{ width: \"20em\" }}\r\n                                            className=\"p-shadow-8 p-mb-3 p-mr-3\" footer={<Button style={{width: \"100%\"}} label=\"Remove\"\r\n                                            onClick={() => this.onClick('displayConfirmation', index)}/>}>\r\n                                          <span style={{margin: \"0 1em 0 0\"}} className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(0,-2)}</span>\r\n                                          <span className=\"p-tag p-badge-secondary p-tag-rounded\">{data.section_code.slice(-2,)}</span>\r\n                                          <p className=\"p-m-0\" style={{ lineHeight: \"1.5\" }}></p>\r\n                                        </Card>)})}\r\n                </div>\r\n                <Dialog visible={this.state.lectureDialog} style={{ width: '450px' }} header=\"Lecture Details\" modal className=\"p-fluid\" footer={lectureDialogFooter} onHide={this.hideDialog}>\r\n                {/* {this.state.teacher.image && <img src={`showcase/demo/images/teacher/${this.state.teacher.image}`} onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'} alt={this.state.teacher.image} className=\"teacher-image\" />} */}\r\n                <div>\r\n                    <label htmlFor=\"Batch\">Batch</label>\r\n                    <Dropdown value={this.state.lecture.batch} options={this.state.batchs} onChange={this.onBatchChange} optionLabel=\"batch_code\" required placeholder=\"Select a Batch\"/>\r\n                    {this.state.submitted && !this.state.lecture.batch && <small className=\"p-invalid\">Batch is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Program\">Program</label>\r\n                    <Dropdown value={this.state.lecture.program_code} options={this.state.programs} onChange={this.onProgramChange} optionLabel=\"program_code\" required placeholder=\"Select a Program\"/>\r\n                    {this.state.submitted && !this.state.lecture.program_code && <small className=\"p-invalid\">Program is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Section\">Section</label>\r\n                    <Dropdown value={this.state.lecture.group_code} options={this.state.sections} onChange={this.onGroupChange} optionLabel=\"section_code\" required placeholder=\"Select a Section\"/>\r\n                    {this.state.submitted && !this.state.lecture.group_code && <small className=\"p-invalid\">Section is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Semester\">Semester</label>\r\n                    <Dropdown value={this.state.lecture.semester} options={this.state.semesters} onChange={this.onSemChange} required placeholder=\"Select a Semester\"/>\r\n                    {this.state.submitted && !this.state.lecture.semester && <small className=\"p-invalid\">Semester is required.</small>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Subject\">Subject</label>\r\n                    <Dropdown value={this.state.lecture.subject_code} options={this.state.subjects} onChange={this.onSubjectChange} optionLabel=\"title\" required placeholder=\"Select a Subject\"/>\r\n                    {this.state.submitted && !this.state.lecture.subject_code && <small className=\"p-invalid\">Subject is required.</small>}\r\n                </div>\r\n            </Dialog>\r\n            <Dialog header=\"Confirmation\" visible={this.state.displayConfirmation} modal style={{ width: '350px' }} footer={this.renderFooter('displayConfirmation')} onHide={() => this.onHide('displayConfirmation')}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem' }} />\r\n                        <span>Are you sure you want to proceed?</span>\r\n                </div>\r\n            </Dialog>\r\n            </Fragment>:null}\r\n                </Fragment>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeTeacher: state.admin.activeTeacherUsername,\r\n        teacherClassValues: state.admin.activeTeacherClasses,\r\n        teacherIndex: state.admin.activeTeacherClassValuesIndex,\r\n        loading: state.admin.loading,\r\n        infoBox: state.admin.infoBox\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // setRedirectNULL: () => dispatch(setAuthRedirect(null)),\r\n        setActiveTeacherClasses: (value) => dispatch(actions.setActiveTeacherClasses(value)),\r\n        setActiveTeacherUsername: (value) => dispatch(actions.setActiveTeacherUsername(value)),\r\n        setActiveTeacherIndex: (value) => dispatch(actions.setActiveTeacherIndex(value)),\r\n        setInfoBox: (value) => dispatch( actions.setInfoBox(value) ),\r\n        resetTeacherClasses: () => dispatch(actions.resetAdminTeacherClass())\r\n    };\r\n};\r\n  \r\nexport default connect( mapStateToProps, mapDispatchToProps )( TeacherSessions );\r\n","import React, {Fragment} from 'react';\r\nimport \"./admindash.css\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport { Button } from \"primereact/button\";\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass AdminDashboard extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n             selectedSem: null,\r\n             uniqueRoll: '',\r\n             loading: false,\r\n             data: null     \r\n    };  \r\n    this.semester = ['1','2','3','4','5','6','7','8'];  \r\n    this.onSemesterChange = this.onSemesterChange.bind(this);\r\n    this.onFetchStudentSemMarks = this.onFetchStudentSemMarks.bind(this);\r\n}\r\n\r\nonSemesterChange(e) {\r\n    this.setState({ selectedSem: e.value });\r\n}\r\n /* \r\n https://primefaces.org/primereact/showcase/#/datatable/filter further code. for filter.\r\n */\r\n    onFetchStudentSemMarks(){\r\n        if (this.state.uniqueRoll !== '' && this.state.selectedSem !== null) {\r\n            this.setState({loading: true})\r\n            fetch(uris.FETCH_STUDENT_DETAILS+'?username='+this.state.uniqueRoll, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }})\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                fetch(uris.FETCH_STUDENT_SEM_MARKS+'?person_id='+res.data.person_id+'&semester='+this.state.selectedSem, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }})\r\n                    .then(res => res.json())\r\n                    .then(res => {this.setState({data: res.data, loading: false})})\r\n                    .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err))\r\n        }else{\r\n            this.toast.show({severity: 'error', summary: 'Invalid Input', detail: 'Please input a valid value!!!'})\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (<Fragment>        \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        <div className=\" p-fluid\">\r\n           <div className=\"p-mt-2 p-grid p-offset-3\">               \r\n                <div className=\"cardResult  p-mt-2   p-col-4\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                       <h2>\r\n                            Total Teachers\r\n                           </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        5\r\n                        </div>\r\n                </div>             \r\n                <div className=\"cardResult p-mt-2 p-offset-2  p-col-4\">\r\n                        <div className=\"p-row headerPAPER\">\r\n                        <h2>\r\n                            Total Students\r\n                            </h2>\r\n                        </div>\r\n                        <hr/>\r\n                           <div className=\"numberBIG p-row\">\r\n                        2000\r\n                        </div>\r\n                    </div>\r\n                </div>     \r\n           <div className=\"p-fluid card\">\r\n               <div className=\"p-grid p-lg-12 p-mt-2 \">\r\n                     <div className=\"p-col\">\r\n                         <h3>Unique Roll No</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                                <InputText label=\"Unique Roll No\" value={this.state.uniqueRoll} onChange={(e) => this.setState({uniqueRoll: e.target.value})} placeholder=\"Enter By Unique Roll No\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-col\">\r\n                         <h3>Semester</h3>\r\n                            <div className=\"p-inputgroup\">\r\n                               <Dropdown value={this.state.selectedSem} options={this.semester} onChange={this.onSemesterChange} placeholder=\"Select Sem\" />\r\n                            </div>\r\n                        </div>\r\n                           <div className=\"p-col\">\r\n                               <h3>Search</h3>\r\n                          <Button icon=\"pi pi-search\" onClick={this.onFetchStudentSemMarks}/>\r\n                        </div>\r\n               </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {this.state.loading ? <div style={{paddingTop: '50px'}}><ProgressSpinner style={{width: '100%'}}/></div> : null}\r\n                        {this.state.data ? \r\n                        <div className=\"datatable-editing\">\r\n                        <Toast ref={(el) => this.toast = el} />\r\n                        \r\n                        <div className=\"card\">\r\n                            <DataTable value={this.state.data} header=\"Data\">\r\n                                <Column field=\"subject_code\" header=\"Subject Code\"></Column>\r\n                                <Column field=\"title\" header=\"Subject Name\"></Column>\r\n                                <Column field=\"theory_marks\" header=\"Assessment\"></Column>\r\n                                <Column field=\"practical_marks\" header=\"Practical\"></Column>\r\n                               \r\n                            </DataTable>\r\n                        </div>\r\n                        </div>:null}\r\n    </Fragment>\r\n        \r\n    );\r\n    }\r\n}\r\nexport default AdminDashboard;\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from \"react-router-dom\";\r\nimport AdminMain from './AdminMain';\r\nimport TeacherSessions from './TeacherSessions';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport * as actions from '../../store/actions/admin';\r\nimport * as uris from '../../store/uris';\r\n\r\nclass Admin extends Component{\r\n\tcomponentDidMount(){\r\n        fetch(uris.FETCH_TEACHER_LIST, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Authorization': 'Bearer '+this.props.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {this.props.onSetTeachers(res.data)})\r\n            .catch(err => console.log(\"Teacher err\", err))\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"layout-main\">\r\n            \t<Route path=\"/\" exact component={AdminMain}/>\r\n            \t<Route path=\"/teachersessions\" exact component={TeacherSessions}/>\r\n            \t<Route path=\"/admindashboard\" exact component={AdminDashboard}/>\r\n            \t{/* <Route path=\"/marksview\" exact component={DataTableView}/>\r\n            \t<Route path=\"/marksentry\" exact component={DataTableEdit}/> */}\r\n      \t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        username: state.auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetTeachers: (values) => dispatch(actions.setTeachers(values))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n","import React from 'react'\r\nimport \"./Login.scss\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport tulogo from \"../images/tulogo.png\";\r\nimport { Toast } from 'primereact/toast';\r\nimport 'primeflex/primeflex.css';\r\n\r\nclass Login extends React.Component{\r\n  constructor (props){\r\n        super();\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n  }\r\n  \r\n  onSubmitHandler(event){\r\n    event.preventDefault();\r\n    let username = document.getElementById('username').value;\r\n    let password = document.getElementById('password').value;\r\n    this.props.onSignIn(username, password);\r\n    if (this.props.error !== null) {\r\n      this.toast.show({severity: 'info', summary: 'Login Failed!!', detail: 'Username or Password Incorrect!!!!'});\r\n      this.props.setError(null);\r\n    }\r\n  }\r\n  render() {\r\n      return (<div>        \r\n        <Toast style={{zIndex: 10000}} ref={(el) => this.toast = el} />\r\n        <div className=\"customgrid\">\r\n    <div className=\"p-col bigText \">\r\n      Internal Marks Management System\r\n    </div>\r\n    <div className=\"p-col\">\r\n      <div className=\"login-page\">\r\n          <div className=\"form\">\r\n              <img\r\n            src={tulogo}\r\n            width=\"60px\" alt=\"TU Logo\"/>\r\n            <h2>IMMS x DBMS</h2>\r\n            {/* <form class=\"register-form\">\r\n              <input type=\"text\" placeholder=\"name\" />\r\n              <input type=\"password\" placeholder=\"password\" />\r\n              <input type=\"text\" placeholder=\"email address\" />\r\n              <button>create</button>\r\n            </form> */}\r\n            <form className=\"login-form\">\r\n              <input id=\"username\" type=\"text\" placeholder=\"username\" />\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" />\r\n              <button onClick={this.onSubmitHandler}>login</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n</div>\r\n        \r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.token !== null,\r\n      authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onSignIn: (username, password) => dispatch(actions.auth(username, password)),\r\n      setError: (value) => dispatch(actions.authFail(value))\r\n  }\r\n};\r\n\r\n// export default Login;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from '../store/actions/auth';\r\nimport { resetStudentState } from '../store/actions/student';\r\nimport { resetTeacherState } from '../store/actions/teacher';\r\nimport { resetAdminState } from '../store/actions/admin';\r\n\r\nclass LogOut extends Component{\r\n    componentDidMount(){\r\n        this.props.resetStudent();\r\n        this.props.resetTeacher();\r\n        this.props.resetAdmin();\r\n        this.props.onLogOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/'/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resetTeacherState: () => dispatch(resetTeacherState()),\r\n        resetStudent: () => dispatch(resetStudentState()),\r\n        resetTeacher: () => dispatch(resetTeacherState()),\r\n        resetAdmin: () => dispatch(resetAdminState()),\r\n        onLogOut: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LogOut);\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from 'react-redux';\r\n// import * as actions from './store/actions/auth';\r\nimport { AppTopbar } from \"./AppTopbar\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import { AppFooter } from \"./AppFooter\";\r\nimport { AppMenu } from \"./AppMenu\";\r\nimport AppProfile from \"./AppProfile\";\r\nimport Teacher from './pages/teacher/Teacher';\r\nimport Student from './pages/student/Student';\r\nimport Admin from './pages/admin/Admin';\r\n// import { Students } from \"./Components/Students\";\r\n// import { DataTableEdit } from \"./pages/teacher/EditTable\";\r\n//import 'primereact/resources/themes/nova-light/theme.css';\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CustomIcons.css\";\r\nimport \"./Layout/layout.scss\";\r\nimport \"./Login/Login\";\r\nimport Login from \"./Login/Login\";\r\nimport LogOut from './pages/LogOut';\r\nimport pcampus from \"./images/pcampus.jpg\";\r\nimport \"primereact/resources/themes/saga-green/theme.css\";\r\nimport \"./Layout/layout.scss\"\r\nimport PrimeReact from 'primereact/utils';\r\n\r\n\r\nclass App extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      layoutMode: \"static\",\r\n      layoutColorMode: \"light\",\r\n      /* Make this True for default Slidebar Close */\r\n      staticMenuInactive: false,\r\n      overlayMenuActive: false,\r\n      mobileMenuActive: false\r\n    };\r\n PrimeReact.ripple = true;\r\n    this.onWrapperClick = this.onWrapperClick.bind(this);\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.onSidebarClick = this.onSidebarClick.bind(this);\r\n    this.onMenuItemClick = this.onMenuItemClick.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    // this.props.onTryAutoSignup();\r\n    // console.log(\"in main page\",this.props);\r\n  }\r\n\r\n  onWrapperClick(event) {\r\n    if (!this.menuClick) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n\r\n    this.menuClick = false;\r\n  }\r\n\r\n  onToggleMenu(event) {\r\n    this.menuClick = true;\r\n\r\n    if (this.isDesktop()) {\r\n      if (this.state.layoutMode === \"overlay\") {\r\n        this.setState({\r\n          overlayMenuActive: !this.state.overlayMenuActive\r\n        });\r\n      } else if (this.state.layoutMode === \"static\") {\r\n        this.setState({\r\n          staticMenuInactive: !this.state.staticMenuInactive\r\n        });\r\n      }\r\n    } else {\r\n      const mobileMenuActive = this.state.mobileMenuActive;\r\n      this.setState({\r\n        mobileMenuActive: !mobileMenuActive\r\n      });\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onSidebarClick(event) {\r\n    this.menuClick = true;\r\n  }\r\n\r\n  onMenuItemClick(event) {\r\n    if (!event.item.items) {\r\n      this.setState({\r\n        overlayMenuActive: false,\r\n        mobileMenuActive: false\r\n      });\r\n    }\r\n  }\r\n\r\n  createMenu() {\r\n    if (this.props.role === 'teacher') {\r\n      this.menu = [\r\n        {\r\n          label: \"Teacher DashBoard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/timeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Section Dashboard\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Marks Edit Mode\",\r\n          icon: \"pi pi-fw pi-user-edit\",\r\n          command: () => {\r\n            window.location = \"#/marksentry\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Score Statistics\",\r\n          icon: \"pi pi-fw pi-chart-bar\",\r\n          command: () => {\r\n            window.location = \"#/statistics\";\r\n          }\r\n\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'student') {\r\n      this.menu = [\r\n        {\r\n          label: \"Student Timeline\",\r\n          icon: \"pi pi-fw pi-globe\",\r\n          command: () => {\r\n            window.location = \"#/studenttimeline\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Student Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Subject Marks\",\r\n          icon: \"pi pi-fw pi-users\",\r\n          command: () => {\r\n            window.location = \"#/marksview\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    } else if (this.props.role === 'admin') {\r\n      this.menu = [\r\n        {\r\n          label: \"Admin Home\",\r\n          icon: \"pi pi-fw pi-eye\",\r\n          command: () => {\r\n            window.location = \"#/admindashboard\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Admin Dashboard\",\r\n          icon: \"pi pi-fw pi-home\",\r\n          command: () => {\r\n            window.location = \"#/\";\r\n          }\r\n        },\r\n        {\r\n          label: \"Teacher Sessions\",\r\n          icon: \"pi pi-fw pi-calendar\",\r\n          command: () => {\r\n            window.location = '#/teachersessions';\r\n          }\r\n        },\r\n        {\r\n          label: \"Log Out\",\r\n          icon: \"pi pi-fw pi-sign-out\",\r\n          command: () => {\r\n            window.location = \"#/logout\";\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  addClass(element, className) {\r\n    if (element.classList) element.classList.add(className);\r\n    else element.className += \" \" + className;\r\n  }\r\n\r\n  removeClass(element, className) {\r\n    if (element.classList) element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n  }\r\n\r\n  isDesktop() {\r\n    return window.innerWidth > 1024;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.mobileMenuActive)\r\n      this.addClass(document.body, \"body-overflow-hidden\");\r\n    else this.removeClass(document.body, \"body-overflow-hidden\");\r\n  }\r\n\r\n  render() {\r\n    // return <Login/>;\r\n    if (!this.props.isAuthenticated){\r\n      return <Login/>\r\n    }\r\n    else {\r\n      this.createMenu();\r\n      const wrapperClass = classNames(\"layout-wrapper\", {\r\n        \"layout-overlay\": this.state.layoutMode === \"overlay\",\r\n        \"layout-static\": this.state.layoutMode === \"static\",\r\n        \"layout-static-sidebar-inactive\":\r\n          this.state.staticMenuInactive && this.state.layoutMode === \"static\",\r\n        \"layout-overlay-sidebar-active\":\r\n          this.state.overlayMenuActive && this.state.layoutMode === \"overlay\",\r\n        \"layout-mobile-sidebar-active\": this.state.mobileMenuActive\r\n      });\r\n\r\n      const sidebarClassName = classNames(\"layout-sidebar\", {\r\n        \"layout-sidebar-light\": this.state.layoutColorMode === \"light\"\r\n      });\r\n\r\n      let renderComponent = null\r\n      switch (this.props.role){\r\n        case 'admin': renderComponent = <Admin/>;\r\n          break;\r\n        case 'teacher': renderComponent = <Teacher/>;\r\n          break;\r\n        case 'student': renderComponent = <Student/>;\r\n          break;\r\n        default: renderComponent = null;\r\n      }\r\n\r\n      return (\r\n        <div className={wrapperClass} onClick={this.onWrapperClick}>\r\n          <AppTopbar onToggleMenu={this.onToggleMenu} />\r\n\r\n          <div ref={(el) => (this.sidebar = el)} className={sidebarClassName} onClick={this.onSidebarClick}>\r\n            <div className=\"layout-logo\">\r\n              <img alt=\"Logo\" width=\"250px\" src={pcampus}/>\r\n            </div>\r\n            <AppProfile />\r\n            <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\r\n          </div>\r\n\r\n          <Route path=\"/logout\" exact component={LogOut}/>\r\n          {renderComponent}\r\n          <Redirect to='/'/>\r\n\r\n          <div className=\"layout-mask\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      role: state.auth.role,\r\n      isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      // onTryAutoSignup: () => dispatch( actions.authCheckState() )\r\n  };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\r\n// export default App;\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    username: null,\r\n    fullname: null,\r\n    role: null,\r\n    error: null,\r\n    loading: false,\r\n    redirect: null,\r\n    email: null\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return { ...state, error: null, loading: true };\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    // return updateObject( state, { \r\n    //     token: action.token,\r\n    //     id: action.id,\r\n    //     role: action.role,\r\n    //     error: null,\r\n    //     loading: false\r\n    //  } );\r\n    // TODO: remove below hardcodes\r\n    // let username = null;\r\n    // if (action.username === '073BCE001A') {\r\n    //     username = '074BCT001';\r\n    // } else if (action.role === 'teacher') {\r\n    //     username = 'teacher';\r\n    // }\r\n    return {\r\n        ...state,\r\n        token: action.token,\r\n        username: action.username,\r\n        fullname: action.fullname,\r\n        role: action.role,\r\n        email: action.email\r\n    }\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return { ...state, error: action.error, loading: false };\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return {...initialState};\r\n};\r\n\r\nconst setAuthRedirect = (state, action) => {\r\n    return { ...state, redirect: action.value }\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT: return setAuthRedirect(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    activeClass: null,\r\n    activeSectionSubject: [],\r\n    activeClassStudentValuesIndex: null,\r\n    classes: [],\r\n    classStudentValues: [],\r\n    loading: true\r\n};\r\n\r\nconst setTeacherClasses = (state, action) => {\r\n    return {...state, classes: action.value, loading: false}\r\n};\r\n\r\nconst setTeacherInfoBox = (state, action) => {\r\n    return {...state, infoBox: action.value}\r\n};\r\n\r\nconst setActiveClass = (state, action) => {\r\n    return {...state, activeClass: action.Class, loading: true};\r\n};\r\n\r\nconst setActiveClassStudentIndex = (state, action) => {\r\n    return {...state, activeClassStudentValuesIndex: action.value, loading: false}\r\n};\r\n\r\nconst setClassStudentValues = (state, action) => {\r\n    return {\r\n        ...state,\r\n        classStudentValues: [...state.classStudentValues, action.value],\r\n        loading: false\r\n    }\r\n};\r\n\r\nconst updateClassStudentValues = (state, action) => {\r\n    let tempClass = [...state.classStudentValues];\r\n    tempClass[state.activeClassStudentValuesIndex].data = action.value\r\n    return {...state, classStudentValues: tempClass}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.SET_TEACHER_CLASSES: return setTeacherClasses(state, action);\r\n        case actionTypes.SET_TEACHER_INFOBOX: return setTeacherInfoBox(state, action);\r\n        case actionTypes.RESET_TEACHER_DEFAULTS: return {...initialState};\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS: return setActiveClass(state, action);\r\n        case actionTypes.SET_TEACHER_CLASS_STUDENT_VALUES: return setClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_SECTION_SUBJECT: return {...state, activeSectionSubject: action.value};\r\n        case actionTypes.UPDATE_TEACHER_CLASS_STUDENT_VALUES: return updateClassStudentValues(state, action);\r\n        case actionTypes.SET_TEACHER_ACTIVE_CLASS_STUDENT_VALUE_INDEX: return setActiveClassStudentIndex(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeSem: null,\r\n    sems: [],\r\n    semSubjectValues: [],\r\n    activeSemSubjectValuesIndex: null\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM: return {...state, activeSem: action.value, loading: true}\r\n        case actionTypes.SET_STUDENT_SEMS: return {...state, sems: action.value, loading: false}\r\n        case actionTypes.SET_STUDENT_SEM_SUBJECT_VALUES: return {...state, semSubjectValues: [...state.semSubjectValues, action.value],\r\n                                                                    loading: false}\r\n        case actionTypes.SET_STUDENT_INFOBOX: return {...state, infoBox: action.value}\r\n        case actionTypes.RESET_STUDENT_DEFAULTS: return {...initialState}\r\n        case actionTypes.SET_STUDENT_ACTIVE_SEM_SUBJECT_VALUE_INDEX: return {...state, activeSemSubjectValuesIndex: action.value,\r\n                                                                    loading: false}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    infoBox: null,\r\n    loading: true,\r\n    activeTeacherUsername: null,\r\n    activeTeacherClasses: [],\r\n    activeTeacherClassValuesIndex: null,\r\n    teacherDepartments: [],\r\n    teachers: []\r\n};\r\n\r\nconst reducer=(state=initialState, action)=>{\r\n    switch (action.type){\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_USERNAME: return {...state, activeTeacherUsername: action.value, loading: true};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASSES: return {...state, activeTeacherClasses: [...state.activeTeacherClasses, action.value],\r\n                                                                            loading: false};\r\n        case actionTypes.SET_ADMIN_ACTIVE_TEACHER_CLASS_VALUE_INDEX: return {...state, activeTeacherClassValuesIndex: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_TEACHER_DEPARTMENTS: return {...state, teacherDepartments: action.value};\r\n        case actionTypes.SET_ADMIN_TEACHERS: return {...state, teachers: action.value, loading: false};\r\n        case actionTypes.SET_ADMIN_INFOBOX: return {...state, infoBox: action.value};\r\n        case actionTypes.RESET_ADMIN_TEACHER_CLASS_VALUES: return {...state, activeTeacherClasses: []};\r\n        case actionTypes.RESET_ADMIN_DEFAULTS: return {...initialState};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\n\r\nimport authReducer from './store/reducers/auth';\r\nimport teacherReducer from './store/reducers/teacher';\r\nimport studentReducer from './store/reducers/student';\r\nimport adminReducer from './store/reducers/admin';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    teacher: teacherReducer,\r\n    student: studentReducer,\r\n    admin: adminReducer\r\n});\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter><ScrollToTop>\r\n      <App/>\r\n   </ScrollToTop></HashRouter>\r\n </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n","module.exports = __webpack_public_path__ + \"static/media/Profile-6.d898415e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tulogo.838d6952.png\";","module.exports = __webpack_public_path__ + \"static/media/pcampus.328e3389.jpg\";"],"sourceRoot":""}